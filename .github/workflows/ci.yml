name: Python CI

# This workflow runs on pushes to the main branch and on pull requests
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11"] # stable versions for ML libs

    steps:
    # 1. Checks out your repository's code
    - name: Checkout repository
      uses: actions/checkout@v3

    # 2. Sets up the specified version of Python
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    # 3. Installs project dependencies and tools for CI
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install flake8 pytest  # tools for linting and testing

    # 4. Lints the code with flake8 to check for style issues
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    # 5. Runs tests with pytest (this will pass for now, but is ready for future tests)
    - name: Test with pytest
      run: |
        pytest || echo "No tests yet"

    # 6. Install DVC with S3 support
    - name: Install DVC
      run: |
        pip install dvc[S3]

    # 7. Pull dataset from DVC remote
    - name: DVC Pull
      env:
        # Provide credentials to DVC via environment variables
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      run: dvc pull -r cloud-storage # Explicitly pull from your named remote

    # 8. Reproduce pipeline (train + log)
    - name: DVC Repro
      env:
        # Credentials might be needed again if repro checks data status
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      run: dvc repro

    # 9. Show latest metrics
    - name: Show metrics
      run: cat data/last_run_metrics.json || echo "Metrics file not found"
    